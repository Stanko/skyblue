// GRID

@use 'sass:math';

.container {
  margin-right: auto;
  margin-left: auto;
  @include clearfix;

  padding-left: $grid-padding-width * 0.5;
  padding-right: $grid-padding-width * 0.5;
}

.row {
  @include clearfix;
  margin-left: math.div($grid-padding-width, -2);
  margin-right: math.div($grid-padding-width, -2);
}

.col {
  min-height: 1px;
  position: relative;
  padding-left: $grid-padding-width * 0.5;
  padding-right: $grid-padding-width * 0.5;
  @include clearfix;

  .float-right {
    float: right;
  }
}

@for $i from 0 through $grid-columns {
  .xs-#{$i} {
    width: $i * $grid-unit-width;
    float: left;
  }
  .offset-xs-#{$i} {
    margin-left: $i * $grid-unit-width;
  }
}

// Responsive: Tablets portrait and up
@include sm {
  @for $i from 0 through $grid-columns {
    .sm-#{$i} {
      width: $i * $grid-unit-width;
      float: left;
    }
    .offset-sm-#{$i} {
      margin-left: $i * $grid-unit-width;
    }
  }
}

// Responsive: Tablets and up
@include md {
  .container {
    max-width: $container-width-md;
  }

  @for $i from 0 through $grid-columns {
    .md-#{$i} {
      width: $i * $grid-unit-width;
      float: left;
    }
    .offset-md-#{$i} {
      margin-left: $i * $grid-unit-width;
    }
  }
}

// Responsive: Desktops and up
@include lg {
  .container {
    max-width: $container-width-lg;
  }

  @for $i from 0 through $grid-columns {
    .lg-#{$i} {
      width: $i * $grid-unit-width;
      float: left;
    }
    .offset-lg-#{$i} {
      margin-left: $i * $grid-unit-width;
    }
  }
}

// Responsive: Large desktops and up
@include xl {
  .container {
    max-width: $container-width-xl;
  }
  @for $i from 0 through $grid-columns {
    .xl-#{$i} {
      width: $i * $grid-unit-width;
      float: left;
    }
    .offset-xl-#{$i} {
      margin-left: $i * $grid-unit-width;
    }
  }
}
